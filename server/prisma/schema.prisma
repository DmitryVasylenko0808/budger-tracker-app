// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  passwordHash String?       @map("password_hash")
  provider     ProviderType?
  providerId   String?       @map("provider_id")
  name         String
  avatar       String?
  verified     Boolean       @default(false)
  twoFa        Boolean       @default(false) @map("two_fa")

  categories   Category[]
  transactions Transaction[]

  @@map("users")
}

model ConfirmationToken {
  id        Int                   @id @default(autoincrement())
  email     String
  value     String                @unique
  expiresAt DateTime              @map("expires_at")
  type      ConfirmationTokenType

  @@map("confirmation_tokens")
}

model Category {
  id    Int             @id @default(autoincrement())
  name  String
  type  TransactionType
  color String          @default("#000000")

  transactions Transaction[]

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  @@map("categories")
}

model Transaction {
  id        Int      @id @default(autoincrement())
  name      String
  amount    Float
  notes     String?
  createdAt DateTime

  categoryId Int      @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  @@map("transactions")
}

enum ProviderType {
  GOOGLE
  GITHUB
}

enum ConfirmationTokenType {
  EMAIL_CONFIRMATION
  RESET_PASSWORD
  TWO_FA
}

enum TransactionType {
  INCOME
  EXPENSE
}
